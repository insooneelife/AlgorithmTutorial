// 소개
// NCSOFT 5년 개발
// 블레이드 앤 소울 모바일 - 클라이언트 2년
// Game AI Lab - 인공지능 시스템 개발 2~3년
// 목표
    // 코테, 공부, cs지식
    // 알고리즘을 배워야하는 이유
        // 왜 해야 하는가?
        // 왜 기업은 알고리즘을 잘하는 인재를 찾는가?
    // 알고리즘 해결전략 (패턴)
        // 완전탐색
        // 정렬
        // 그래프탐색 (BFS, DFS)
        // 트리
        // 그래프
        // 분할정복
        // 동적계획법
    // C++을 통한 CS(Computer Science) 개념
        // 개발자한테 모든 책임을 다 넘김 -> 모든 개념을 다 숙지하고 있어야 함 -> 공부하기에는 좋은 언어 
        // 개발하기에 좋은 언어? -> 그것은 상황에 따라 다름
    // 개인 (블로그) 알고리즘 라이브러리 만들기 (온라인 코딩테스트)
        // 검색 가능
        // BFS, DFS, 다익스트라 미리 짜둠
        // Trie, 구간트리, 컨벡스 헐, Suffix Tree
// 과정
    // CS 개념 이야기
    // 문제해결전략 (정렬) 소개
    // 문제 소개 및 풀이
    // 라이브러리 추가
    // 문제 풀이 (수업 이후~)


// --- CS 개념 ---
// 동적타입언어 vs 정적타입언어
// https://algorfati.tistory.com/112

// Managed vs Unmanaged 언어
// https://algorfati.tistory.com/113

    // 진정한 개발자가 되기 위해서는?  다양한 환경에 적응을 해야함
    // c, c++ (Unmanaged, 정적타입언어) || 
    // java, c# (oop, Managed, 정적타입언어) || 
    // python, javascript (Managed, 동적타입언어)

// 메모리 구조
// https://algorfati.tistory.com/114

// --- C++ ---
// 타입
// https://algorfati.tistory.com/115

// 정렬
// https://algorfati.tistory.com/106


#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
    return 0;
}


// 추가 연습문제


// 전화번호 목록 (해시 or 정렬)
// https://programmers.co.kr/learn/courses/30/lessons/42577


